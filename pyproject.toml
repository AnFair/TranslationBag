[project]
requires-python = ">=3.12"


[tool.poetry]
name = "TranslationBag"
version = "0.1.0"
description = ""
authors = []
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
pillow = "^10.3.0"
nicegui = "^1.4.26"
cloudinary = "^1.40.0"


[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
cache-dir = ".cache/ruff"

line-length = 100

target-version = "py312"

lint.select = [
    "A",  # prevent using keywords that clobber python builtins
    "B",  # bugbear: security warnings
    "E",  # pycodestyle
    "F",  # pyflakes
    "N",  # pep8-naming
    "ANN",  # annotations
    "ASYNC",  # async/await
    "S",  # Bandit
    "FBT",
    "DTZ",
    "ISC",
    "ICN",
    "PIE",
    "PYI",
    "Q",
    "RSE",
    "RET",
    "SLOT",
    "TCH",
    "PTH",
    "LOG",
    "RUF",
    "C4",  # flake8-comprehensions
    "ISC",  # implicit string concatenation
    "UP",  # alert you when better syntax is available in your python version
    "RUF",  # the ruff developer's own rules
    # flake8-simplify
    "SIM",
    # isort
    "I",
]

fix = true
unsafe-fixes = true
lint.extend-fixable = ["B"]
lint.preview = true
lint.ignore = ["ISC001"]
# Enumerate all fixed violations.
show-fixes = true

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    # Allow Pydantic's `@validator` decorator to trigger class method treatment.
    "pydantic.validator",
]